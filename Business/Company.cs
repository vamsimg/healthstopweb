/*------------------------------------------------------------------------
<generated>
     This code was generated by The NuSoft Framework v3.0
     Generated at 15/07/2012 3:36:23 PM.

     The NuSoft Framework is an open source project developed
     by NuSoft Solutions (http://www.nusoftsolutions.com).
     The latest version of the framework templates and detailed license
     is available at http://www.codeplex.com/NuSoftFramework.

     This file will NOT be overwritten when regenerating your code.
</generated>
------------------------------------------------------------------------*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data;
using System.Data.SqlClient;
using System.Text;
using System.Linq;

using HealthStop.Business.Framework;

namespace HealthStop.Business
{
	/// <summary>
	/// This object represents the properties and methods of a Company.
	/// </summary>
	public partial class Company : EntityBase
	{

          public EntityList<Permission> GetActivePermissions()
          {
               EntityList<Permission> permissions = this.PermissionsBycompany_.FindAll(p => p.role_nameId != "Archived");
               return permissions;
          }

          public static Company GetCompanyByCompanyNumber(string companyNumber)
          {
               SqlParameter p = new SqlParameter("@company_number", companyNumber);

               string where = "where company_number = @company_number ";

               EntityList<Company> companies = Company.GetCompanies(where, p);

               if (companies.Count == 1)
               {
                    return companies[0];
               }
               else
               {
                    return null;
               }
          }

          

          public IEnumerable<string> GetDepartments()
          {
               return this.SupplierProductsBycompany_.Select(p => p.department);
          }

          public IEnumerable<string> GetBrands()
          {
               return this.SupplierProductsBycompany_.Select(p => p.brand);
          }

          public string localPOSSupplierCode
          {
               get
               {
                    return "healthstop_" + this.company_id.ToString();
               }
          }
	}
}
